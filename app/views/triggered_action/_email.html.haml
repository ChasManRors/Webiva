%tbody
  = f.radio_buttons :send_type, [ ['Use custom message','message'],['Send a mail template','template']], :onchange => "SCMS.showHide('custom_message','template_message',this.value == 'template');", :description => 'Should this trigger send using a mail template or a custom message entered below'

%tbody{:id => 'custom_message', :style => @action_options.send_type == 'message' ? nil : 'display:none;'}
  = f.header 'Custom Message'
  = f.text_field :subject, :required => true
  = f.text_area :custom_message, :cols => 40, :rows => 5

%tbody{:id => 'template_message', :style => @action_options.send_type == 'template' ? nil : 'display:none;'}
  = f.header 'Mail Template'
  = f.select :mail_template_id, MailTemplate.site_template_options

%tbody
  = f.header 'Sending Details'
  = f.radio_buttons :email_to, [['A User profile','user_class'],['One or more specific addresses','addresses'],['Autorespond to submitter','autorespond']],  :label => 'Who to email', :required => true, :onchange => "SCMS.toggle(['email_user_classes','email_addresses'],[this.value=='user_class',this.value=='addresses']);", :separator => '<br/>'
  = f.text_field :message_from, :description => 'Email Address in "from" field (Leave blank for default or %%attribute_name%% for attribute'

%tbody{:id => 'email_user_classes', :style => @action_options.email_to == 'user_class' ? nil : 'display:none;'}
  = f.select :user_class, available_user_classes, :label => 'User Class to Email', :required => true

%tbody{:id => 'email_addresses', :style => @action_options.email_to == 'addresses' ? nil : 'display:none;'}
  = f.text_area :email_addresses, :cols => 40, :rows => 5, :description => 'Emails to send to - enter one per line (Or %%attribute_name%%)'

%tbody
  = f.header "Message Body", :description => 'These elements are included in a template in the %%DATA%% variable or after the custom messsage information above'
  = f.radio_buttons :include_user_info, [['No','n'],['Yes','y']]
  - if @triggered_action.trigger_type == 'ContentPublication'
    = f.select :publication_id, available_display_publication, :label => 'Publication to Email'
  - else
    = f.radio_buttons :include_data, [['No','n'],['Yes','y']]
